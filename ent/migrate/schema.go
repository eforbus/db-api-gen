// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DepartmentColumns holds the columns for the "department" table.
	DepartmentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// DepartmentTable holds the schema information for the "department" table.
	DepartmentTable = &schema.Table{
		Name:       "department",
		Columns:    DepartmentColumns,
		PrimaryKey: []*schema.Column{DepartmentColumns[0]},
	}
	// DeptEmployeeColumns holds the columns for the "dept_employee" table.
	DeptEmployeeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "from_date", Type: field.TypeTime},
		{Name: "to_date", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "department_id", Type: field.TypeString, Nullable: true},
		{Name: "employee_id", Type: field.TypeString, Nullable: true},
	}
	// DeptEmployeeTable holds the schema information for the "dept_employee" table.
	DeptEmployeeTable = &schema.Table{
		Name:       "dept_employee",
		Columns:    DeptEmployeeColumns,
		PrimaryKey: []*schema.Column{DeptEmployeeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "dept_employee_department_dept_employees",
				Columns:    []*schema.Column{DeptEmployeeColumns[5]},
				RefColumns: []*schema.Column{DepartmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "dept_employee_employee_dept_employees",
				Columns:    []*schema.Column{DeptEmployeeColumns[6]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DeptManagerColumns holds the columns for the "dept_manager" table.
	DeptManagerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "from_date", Type: field.TypeTime},
		{Name: "to_date", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "department_id", Type: field.TypeString, Nullable: true},
		{Name: "employee_id", Type: field.TypeString, Nullable: true},
	}
	// DeptManagerTable holds the schema information for the "dept_manager" table.
	DeptManagerTable = &schema.Table{
		Name:       "dept_manager",
		Columns:    DeptManagerColumns,
		PrimaryKey: []*schema.Column{DeptManagerColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "dept_manager_department_dept_managers",
				Columns:    []*schema.Column{DeptManagerColumns[5]},
				RefColumns: []*schema.Column{DepartmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "dept_manager_employee_dept_managers",
				Columns:    []*schema.Column{DeptManagerColumns[6]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EmployeeColumns holds the columns for the "employee" table.
	EmployeeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "birth_date", Type: field.TypeTime},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "gender", Type: field.TypeEnum, Enums: []string{"M", "F"}},
		{Name: "hire_date", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// EmployeeTable holds the schema information for the "employee" table.
	EmployeeTable = &schema.Table{
		Name:       "employee",
		Columns:    EmployeeColumns,
		PrimaryKey: []*schema.Column{EmployeeColumns[0]},
	}
	// SalaryColumns holds the columns for the "salary" table.
	SalaryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "salary", Type: field.TypeInt32},
		{Name: "from_date", Type: field.TypeTime},
		{Name: "to_date", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "employee_id", Type: field.TypeString, Nullable: true},
	}
	// SalaryTable holds the schema information for the "salary" table.
	SalaryTable = &schema.Table{
		Name:       "salary",
		Columns:    SalaryColumns,
		PrimaryKey: []*schema.Column{SalaryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "salary_employee_salaries",
				Columns:    []*schema.Column{SalaryColumns[6]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TitleColumns holds the columns for the "title" table.
	TitleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "from_date", Type: field.TypeTime},
		{Name: "to_date", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "employee_id", Type: field.TypeString, Nullable: true},
	}
	// TitleTable holds the schema information for the "title" table.
	TitleTable = &schema.Table{
		Name:       "title",
		Columns:    TitleColumns,
		PrimaryKey: []*schema.Column{TitleColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "title_employee_titles",
				Columns:    []*schema.Column{TitleColumns[6]},
				RefColumns: []*schema.Column{EmployeeColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DepartmentTable,
		DeptEmployeeTable,
		DeptManagerTable,
		EmployeeTable,
		SalaryTable,
		TitleTable,
	}
)

func init() {
	DepartmentTable.Annotation = &entsql.Annotation{
		Table: "department",
	}
	DeptEmployeeTable.ForeignKeys[0].RefTable = DepartmentTable
	DeptEmployeeTable.ForeignKeys[1].RefTable = EmployeeTable
	DeptEmployeeTable.Annotation = &entsql.Annotation{
		Table: "dept_employee",
	}
	DeptManagerTable.ForeignKeys[0].RefTable = DepartmentTable
	DeptManagerTable.ForeignKeys[1].RefTable = EmployeeTable
	DeptManagerTable.Annotation = &entsql.Annotation{
		Table: "dept_manager",
	}
	EmployeeTable.Annotation = &entsql.Annotation{
		Table: "employee",
	}
	SalaryTable.ForeignKeys[0].RefTable = EmployeeTable
	SalaryTable.Annotation = &entsql.Annotation{
		Table: "salary",
	}
	TitleTable.ForeignKeys[0].RefTable = EmployeeTable
	TitleTable.Annotation = &entsql.Annotation{
		Table: "title",
	}
}
