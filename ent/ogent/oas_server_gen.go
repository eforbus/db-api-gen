// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// CreateDepartment implements createDepartment operation.
	//
	// Creates a new Department and persists it to storage.
	//
	// POST /departments
	CreateDepartment(ctx context.Context, req *CreateDepartmentReq) (CreateDepartmentRes, error)
	// CreateDeptEmployee implements createDeptEmployee operation.
	//
	// Creates a new DeptEmployee and persists it to storage.
	//
	// POST /dept-employees
	CreateDeptEmployee(ctx context.Context, req *CreateDeptEmployeeReq) (CreateDeptEmployeeRes, error)
	// CreateDeptManager implements createDeptManager operation.
	//
	// Creates a new DeptManager and persists it to storage.
	//
	// POST /dept-managers
	CreateDeptManager(ctx context.Context, req *CreateDeptManagerReq) (CreateDeptManagerRes, error)
	// CreateEmployee implements createEmployee operation.
	//
	// Creates a new Employee and persists it to storage.
	//
	// POST /employees
	CreateEmployee(ctx context.Context, req *CreateEmployeeReq) (CreateEmployeeRes, error)
	// CreateSalary implements createSalary operation.
	//
	// Creates a new Salary and persists it to storage.
	//
	// POST /salaries
	CreateSalary(ctx context.Context, req *CreateSalaryReq) (CreateSalaryRes, error)
	// CreateTitle implements createTitle operation.
	//
	// Creates a new Title and persists it to storage.
	//
	// POST /titles
	CreateTitle(ctx context.Context, req *CreateTitleReq) (CreateTitleRes, error)
	// DeleteDepartment implements deleteDepartment operation.
	//
	// Deletes the Department with the requested ID.
	//
	// DELETE /departments/{id}
	DeleteDepartment(ctx context.Context, params DeleteDepartmentParams) (DeleteDepartmentRes, error)
	// DeleteDeptEmployee implements deleteDeptEmployee operation.
	//
	// Deletes the DeptEmployee with the requested ID.
	//
	// DELETE /dept-employees/{id}
	DeleteDeptEmployee(ctx context.Context, params DeleteDeptEmployeeParams) (DeleteDeptEmployeeRes, error)
	// DeleteDeptManager implements deleteDeptManager operation.
	//
	// Deletes the DeptManager with the requested ID.
	//
	// DELETE /dept-managers/{id}
	DeleteDeptManager(ctx context.Context, params DeleteDeptManagerParams) (DeleteDeptManagerRes, error)
	// DeleteEmployee implements deleteEmployee operation.
	//
	// Deletes the Employee with the requested ID.
	//
	// DELETE /employees/{id}
	DeleteEmployee(ctx context.Context, params DeleteEmployeeParams) (DeleteEmployeeRes, error)
	// DeleteSalary implements deleteSalary operation.
	//
	// Deletes the Salary with the requested ID.
	//
	// DELETE /salaries/{id}
	DeleteSalary(ctx context.Context, params DeleteSalaryParams) (DeleteSalaryRes, error)
	// DeleteTitle implements deleteTitle operation.
	//
	// Deletes the Title with the requested ID.
	//
	// DELETE /titles/{id}
	DeleteTitle(ctx context.Context, params DeleteTitleParams) (DeleteTitleRes, error)
	// ListDepartment implements listDepartment operation.
	//
	// List Departments.
	//
	// GET /departments
	ListDepartment(ctx context.Context, params ListDepartmentParams) (ListDepartmentRes, error)
	// ListDepartmentDeptEmployees implements listDepartmentDeptEmployees operation.
	//
	// List attached DeptEmployees.
	//
	// GET /departments/{id}/dept-employees
	ListDepartmentDeptEmployees(ctx context.Context, params ListDepartmentDeptEmployeesParams) (ListDepartmentDeptEmployeesRes, error)
	// ListDepartmentDeptManagers implements listDepartmentDeptManagers operation.
	//
	// List attached DeptManagers.
	//
	// GET /departments/{id}/dept-managers
	ListDepartmentDeptManagers(ctx context.Context, params ListDepartmentDeptManagersParams) (ListDepartmentDeptManagersRes, error)
	// ListDeptEmployee implements listDeptEmployee operation.
	//
	// List DeptEmployees.
	//
	// GET /dept-employees
	ListDeptEmployee(ctx context.Context, params ListDeptEmployeeParams) (ListDeptEmployeeRes, error)
	// ListDeptManager implements listDeptManager operation.
	//
	// List DeptManagers.
	//
	// GET /dept-managers
	ListDeptManager(ctx context.Context, params ListDeptManagerParams) (ListDeptManagerRes, error)
	// ListEmployee implements listEmployee operation.
	//
	// List Employees.
	//
	// GET /employees
	ListEmployee(ctx context.Context, params ListEmployeeParams) (ListEmployeeRes, error)
	// ListEmployeeDeptEmployees implements listEmployeeDeptEmployees operation.
	//
	// List attached DeptEmployees.
	//
	// GET /employees/{id}/dept-employees
	ListEmployeeDeptEmployees(ctx context.Context, params ListEmployeeDeptEmployeesParams) (ListEmployeeDeptEmployeesRes, error)
	// ListEmployeeDeptManagers implements listEmployeeDeptManagers operation.
	//
	// List attached DeptManagers.
	//
	// GET /employees/{id}/dept-managers
	ListEmployeeDeptManagers(ctx context.Context, params ListEmployeeDeptManagersParams) (ListEmployeeDeptManagersRes, error)
	// ListEmployeeSalaries implements listEmployeeSalaries operation.
	//
	// List attached Salaries.
	//
	// GET /employees/{id}/salaries
	ListEmployeeSalaries(ctx context.Context, params ListEmployeeSalariesParams) (ListEmployeeSalariesRes, error)
	// ListEmployeeTitles implements listEmployeeTitles operation.
	//
	// List attached Titles.
	//
	// GET /employees/{id}/titles
	ListEmployeeTitles(ctx context.Context, params ListEmployeeTitlesParams) (ListEmployeeTitlesRes, error)
	// ListSalary implements listSalary operation.
	//
	// List Salaries.
	//
	// GET /salaries
	ListSalary(ctx context.Context, params ListSalaryParams) (ListSalaryRes, error)
	// ListTitle implements listTitle operation.
	//
	// List Titles.
	//
	// GET /titles
	ListTitle(ctx context.Context, params ListTitleParams) (ListTitleRes, error)
	// ReadDepartment implements readDepartment operation.
	//
	// Finds the Department with the requested ID and returns it.
	//
	// GET /departments/{id}
	ReadDepartment(ctx context.Context, params ReadDepartmentParams) (ReadDepartmentRes, error)
	// ReadDeptEmployee implements readDeptEmployee operation.
	//
	// Finds the DeptEmployee with the requested ID and returns it.
	//
	// GET /dept-employees/{id}
	ReadDeptEmployee(ctx context.Context, params ReadDeptEmployeeParams) (ReadDeptEmployeeRes, error)
	// ReadDeptEmployeeDepartment implements readDeptEmployeeDepartment operation.
	//
	// Find the attached Department of the DeptEmployee with the given ID.
	//
	// GET /dept-employees/{id}/department
	ReadDeptEmployeeDepartment(ctx context.Context, params ReadDeptEmployeeDepartmentParams) (ReadDeptEmployeeDepartmentRes, error)
	// ReadDeptEmployeeEmployee implements readDeptEmployeeEmployee operation.
	//
	// Find the attached Employee of the DeptEmployee with the given ID.
	//
	// GET /dept-employees/{id}/employee
	ReadDeptEmployeeEmployee(ctx context.Context, params ReadDeptEmployeeEmployeeParams) (ReadDeptEmployeeEmployeeRes, error)
	// ReadDeptManager implements readDeptManager operation.
	//
	// Finds the DeptManager with the requested ID and returns it.
	//
	// GET /dept-managers/{id}
	ReadDeptManager(ctx context.Context, params ReadDeptManagerParams) (ReadDeptManagerRes, error)
	// ReadDeptManagerDepartment implements readDeptManagerDepartment operation.
	//
	// Find the attached Department of the DeptManager with the given ID.
	//
	// GET /dept-managers/{id}/department
	ReadDeptManagerDepartment(ctx context.Context, params ReadDeptManagerDepartmentParams) (ReadDeptManagerDepartmentRes, error)
	// ReadDeptManagerEmployee implements readDeptManagerEmployee operation.
	//
	// Find the attached Employee of the DeptManager with the given ID.
	//
	// GET /dept-managers/{id}/employee
	ReadDeptManagerEmployee(ctx context.Context, params ReadDeptManagerEmployeeParams) (ReadDeptManagerEmployeeRes, error)
	// ReadEmployee implements readEmployee operation.
	//
	// Finds the Employee with the requested ID and returns it.
	//
	// GET /employees/{id}
	ReadEmployee(ctx context.Context, params ReadEmployeeParams) (ReadEmployeeRes, error)
	// ReadSalary implements readSalary operation.
	//
	// Finds the Salary with the requested ID and returns it.
	//
	// GET /salaries/{id}
	ReadSalary(ctx context.Context, params ReadSalaryParams) (ReadSalaryRes, error)
	// ReadSalaryEmployee implements readSalaryEmployee operation.
	//
	// Find the attached Employee of the Salary with the given ID.
	//
	// GET /salaries/{id}/employee
	ReadSalaryEmployee(ctx context.Context, params ReadSalaryEmployeeParams) (ReadSalaryEmployeeRes, error)
	// ReadTitle implements readTitle operation.
	//
	// Finds the Title with the requested ID and returns it.
	//
	// GET /titles/{id}
	ReadTitle(ctx context.Context, params ReadTitleParams) (ReadTitleRes, error)
	// ReadTitleEmployee implements readTitleEmployee operation.
	//
	// Find the attached Employee of the Title with the given ID.
	//
	// GET /titles/{id}/employee
	ReadTitleEmployee(ctx context.Context, params ReadTitleEmployeeParams) (ReadTitleEmployeeRes, error)
	// UpdateDepartment implements updateDepartment operation.
	//
	// Updates a Department and persists changes to storage.
	//
	// PATCH /departments/{id}
	UpdateDepartment(ctx context.Context, req *UpdateDepartmentReq, params UpdateDepartmentParams) (UpdateDepartmentRes, error)
	// UpdateDeptEmployee implements updateDeptEmployee operation.
	//
	// Updates a DeptEmployee and persists changes to storage.
	//
	// PATCH /dept-employees/{id}
	UpdateDeptEmployee(ctx context.Context, req *UpdateDeptEmployeeReq, params UpdateDeptEmployeeParams) (UpdateDeptEmployeeRes, error)
	// UpdateDeptManager implements updateDeptManager operation.
	//
	// Updates a DeptManager and persists changes to storage.
	//
	// PATCH /dept-managers/{id}
	UpdateDeptManager(ctx context.Context, req *UpdateDeptManagerReq, params UpdateDeptManagerParams) (UpdateDeptManagerRes, error)
	// UpdateEmployee implements updateEmployee operation.
	//
	// Updates a Employee and persists changes to storage.
	//
	// PATCH /employees/{id}
	UpdateEmployee(ctx context.Context, req *UpdateEmployeeReq, params UpdateEmployeeParams) (UpdateEmployeeRes, error)
	// UpdateSalary implements updateSalary operation.
	//
	// Updates a Salary and persists changes to storage.
	//
	// PATCH /salaries/{id}
	UpdateSalary(ctx context.Context, req *UpdateSalaryReq, params UpdateSalaryParams) (UpdateSalaryRes, error)
	// UpdateTitle implements updateTitle operation.
	//
	// Updates a Title and persists changes to storage.
	//
	// PATCH /titles/{id}
	UpdateTitle(ctx context.Context, req *UpdateTitleReq, params UpdateTitleParams) (UpdateTitleRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
